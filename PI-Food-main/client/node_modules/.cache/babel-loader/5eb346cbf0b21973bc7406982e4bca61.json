{"ast":null,"code":"import axios from 'axios';\nexport const GET_RECIPES = 'GET_RECIPES';\nexport const GET_DIETS = 'GET_DIETS';\nexport const GET_RECIPE_DETAIL = 'GET_RECIPE_DETAIL';\nexport const CREATE_RECIPE = 'CREATE_RECIPE';\nexport const getBackendRecipes = () => {\n  return async function ask(dispatch) {\n    let info = await axios.get('http://localhost:3001/recipes');\n    return dispatch({\n      type: GET_RECIPES,\n      payload: info.data\n    });\n  };\n};\nexport const getBackendDiets = () => {\n  return async dispatch => {\n    let dietTypes = await axios.get('http://localhost:3001/diets');\n    return dispatch({\n      type: GET_DIETS,\n      payload: dietTypes.data\n    });\n  };\n};\nexport const getRecipesByName = title => {\n  return async dispatch => {\n    return fetch(`http://localhost:3001/recipes/?title=${title}`).then(res => res.json()).then(detail => {\n      dispatch({\n        type: GET_RECIPE_DETAIL,\n        payload: detail\n      });\n    });\n  };\n};\nexport const postRecipe = payload => {\n  return async dispatch => {\n    const res = axios.post('http://localhost:3001/create', payload);\n    return {\n      type: CREATE_RECIPE,\n      res\n    };\n  };\n};","map":{"version":3,"names":["axios","GET_RECIPES","GET_DIETS","GET_RECIPE_DETAIL","CREATE_RECIPE","getBackendRecipes","ask","dispatch","info","get","type","payload","data","getBackendDiets","dietTypes","getRecipesByName","title","fetch","then","res","json","detail","postRecipe","post"],"sources":["/Users/trinigval/Documents/PI-Foods2/PI-Food-main/client/src/Redux/actions.js"],"sourcesContent":["import axios from 'axios'; \nexport const GET_RECIPES = 'GET_RECIPES';\nexport const GET_DIETS = 'GET_DIETS';\nexport const GET_RECIPE_DETAIL = 'GET_RECIPE_DETAIL'; \nexport const CREATE_RECIPE = 'CREATE_RECIPE'\n\nexport const getBackendRecipes = () => {\n   return async function ask(dispatch) {\n    let info = await axios.get('http://localhost:3001/recipes')\n    return dispatch({\n        type: GET_RECIPES,\n        payload: info.data \n    })\n }\n}\nexport const getBackendDiets = () => {\n    return async (dispatch) => {\n        let dietTypes = await axios.get('http://localhost:3001/diets')\n        return dispatch({\n            type: GET_DIETS,\n            payload: dietTypes.data\n        })\n    }\n}\n\nexport const getRecipesByName = (title) => {\n    return async (dispatch) => {\n        return fetch(`http://localhost:3001/recipes/?title=${title}`)\n        .then(res => res.json())\n        .then(detail => {dispatch( {type:GET_RECIPE_DETAIL, payload: detail} )})\n    }\n}\n\nexport const postRecipe = (payload) => {\n    return async (dispatch) => {\n        const res = axios.post('http://localhost:3001/create', payload)\n        return {\n            type: CREATE_RECIPE,\n            res\n        }\n    }\n\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;EACpC,OAAO,eAAeC,GAAf,CAAmBC,QAAnB,EAA6B;IACnC,IAAIC,IAAI,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,+BAAV,CAAjB;IACA,OAAOF,QAAQ,CAAC;MACZG,IAAI,EAAET,WADM;MAEZU,OAAO,EAAEH,IAAI,CAACI;IAFF,CAAD,CAAf;EAIF,CANC;AAOF,CARM;AASP,OAAO,MAAMC,eAAe,GAAG,MAAM;EACjC,OAAO,MAAON,QAAP,IAAoB;IACvB,IAAIO,SAAS,GAAG,MAAMd,KAAK,CAACS,GAAN,CAAU,6BAAV,CAAtB;IACA,OAAOF,QAAQ,CAAC;MACZG,IAAI,EAAER,SADM;MAEZS,OAAO,EAAEG,SAAS,CAACF;IAFP,CAAD,CAAf;EAIH,CAND;AAOH,CARM;AAUP,OAAO,MAAMG,gBAAgB,GAAIC,KAAD,IAAW;EACvC,OAAO,MAAOT,QAAP,IAAoB;IACvB,OAAOU,KAAK,CAAE,wCAAuCD,KAAM,EAA/C,CAAL,CACNE,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,EAENF,IAFM,CAEDG,MAAM,IAAI;MAACd,QAAQ,CAAE;QAACG,IAAI,EAACP,iBAAN;QAAyBQ,OAAO,EAAEU;MAAlC,CAAF,CAAR;IAAsD,CAFhE,CAAP;EAGH,CAJD;AAKH,CANM;AAQP,OAAO,MAAMC,UAAU,GAAIX,OAAD,IAAa;EACnC,OAAO,MAAOJ,QAAP,IAAoB;IACvB,MAAMY,GAAG,GAAGnB,KAAK,CAACuB,IAAN,CAAW,8BAAX,EAA2CZ,OAA3C,CAAZ;IACA,OAAO;MACHD,IAAI,EAAEN,aADH;MAEHe;IAFG,CAAP;EAIH,CAND;AAQH,CATM"},"metadata":{},"sourceType":"module"}