{"ast":null,"code":"import axios from 'axios';\nexport const GET_RECIPES = 'GET_RECIPES';\nexport const GET_DIETS = 'GET_DIETS';\nexport const RECIPE_DETAIL = 'GET_RECIPE_DETAIL';\nexport const CREATE_RECIPE = 'CREATE_RECIPE';\nexport const FILTER_BY_DIET = 'FILTER_BY_DIET';\nexport const SORT_HEALTHSCORE = 'SORT_HEALTHSCORE';\nexport const ALPHABET = 'ALPHABET';\nexport const GET_RECIPE_NAME = 'GET_RECIPE_NAME';\nexport const getBackendRecipes = () => {\n  return async function ask(dispatch) {\n    let info = await axios.get('http://localhost:3001/recipes');\n    return dispatch({\n      type: GET_RECIPES,\n      payload: info.data\n    });\n  };\n};\nexport const getBackendDiets = () => {\n  return async dispatch => {\n    let diets = await axios.get('http://localhost:3001/diets');\n    return dispatch({\n      type: GET_DIETS,\n      payload: diets.data\n    });\n  };\n};\nexport const getRecipesByName = title => {\n  return async dispatch => {\n    return fetch(`http://localhost:3001/recipes/?title=${title}`).then(res => res.json()).then(detail => {\n      dispatch({\n        type: GET_RECIPE_NAME,\n        payload: detail\n      });\n    });\n  };\n};\nexport const postRecipe = payload => {\n  return async dispatch => {\n    const res = await axios.post('http://localhost:3001/recipes/create', payload);\n    return {\n      type: CREATE_RECIPE,\n      res\n    };\n  };\n};\nexport const getRecipeDetail = id => {\n  return async function (dispatch) {\n    const details = await axios.get('http://localhost:3001/recipes/' + id);\n    return dispatch({\n      type: RECIPE_DETAIL,\n      payload: details.data\n    });\n  };\n};\nexport function filterByDiet(payload) {\n  return {\n    type: FILTER_BY_DIET,\n    payload\n  };\n}\n;\nexport function sortByHealthscore(payload) {\n  return {\n    type: SORT_HEALTHSCORE,\n    payload\n  };\n}\nexport function sortAlphabetically(payload) {\n  return {\n    type: ALPHABET,\n    payload\n  };\n}","map":{"version":3,"names":["axios","GET_RECIPES","GET_DIETS","RECIPE_DETAIL","CREATE_RECIPE","FILTER_BY_DIET","SORT_HEALTHSCORE","ALPHABET","GET_RECIPE_NAME","getBackendRecipes","ask","dispatch","info","get","type","payload","data","getBackendDiets","diets","getRecipesByName","title","fetch","then","res","json","detail","postRecipe","post","getRecipeDetail","id","details","filterByDiet","sortByHealthscore","sortAlphabetically"],"sources":["/Users/trinigval/Documents/PI-Foods2/PI-Food-main/client/src/Redux/actions.js"],"sourcesContent":["import axios from 'axios'; \nexport const GET_RECIPES = 'GET_RECIPES';\nexport const GET_DIETS = 'GET_DIETS';\nexport const RECIPE_DETAIL = 'GET_RECIPE_DETAIL'; \nexport const CREATE_RECIPE = 'CREATE_RECIPE'; \nexport const FILTER_BY_DIET = 'FILTER_BY_DIET';\nexport const SORT_HEALTHSCORE = 'SORT_HEALTHSCORE';\nexport const ALPHABET = 'ALPHABET'\nexport const GET_RECIPE_NAME = 'GET_RECIPE_NAME'\n\nexport const getBackendRecipes = () => {\n   return async function ask(dispatch) {\n    let info = await axios.get('http://localhost:3001/recipes')\n    return dispatch({\n        type: GET_RECIPES,\n        payload: info.data \n    })\n }\n}\nexport const getBackendDiets = () => {\n    return async (dispatch) => {\n        let diets = await axios.get('http://localhost:3001/diets')\n        return dispatch({\n            type: GET_DIETS,\n            payload: diets.data\n        })\n    }\n}\n\nexport const getRecipesByName = (title) => {\n    return async (dispatch) => {\n        return fetch(`http://localhost:3001/recipes/?title=${title}`)\n        .then(res => res.json())\n        .then(detail => {dispatch( {type: GET_RECIPE_NAME, payload: detail} )})\n    }\n}\n\nexport const postRecipe = (payload) => {\n    return async (dispatch) => {\n        const res = await axios.post('http://localhost:3001/recipes/create', payload)\n        return {\n            type: CREATE_RECIPE,\n            res\n        }\n    }\n\n}\nexport const getRecipeDetail = (id) => {\n    return async function (dispatch) {\n        const details = await axios.get('http://localhost:3001/recipes/' + id)\n        return dispatch({\n            type: RECIPE_DETAIL,\n            payload: details.data\n        })\n    }\n\n}\n\nexport function filterByDiet (payload) {\n    return {\n        type: FILTER_BY_DIET,\n        payload\n    }\n};\n\nexport function sortByHealthscore(payload) {\n    return {\n        type: SORT_HEALTHSCORE,\n        payload\n    }\n}\n\nexport function sortAlphabetically(payload) {\n    return {\n        type: ALPHABET,\n        payload\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,aAAa,GAAG,mBAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;EACpC,OAAO,eAAeC,GAAf,CAAmBC,QAAnB,EAA6B;IACnC,IAAIC,IAAI,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,+BAAV,CAAjB;IACA,OAAOF,QAAQ,CAAC;MACZG,IAAI,EAAEb,WADM;MAEZc,OAAO,EAAEH,IAAI,CAACI;IAFF,CAAD,CAAf;EAIF,CANC;AAOF,CARM;AASP,OAAO,MAAMC,eAAe,GAAG,MAAM;EACjC,OAAO,MAAON,QAAP,IAAoB;IACvB,IAAIO,KAAK,GAAG,MAAMlB,KAAK,CAACa,GAAN,CAAU,6BAAV,CAAlB;IACA,OAAOF,QAAQ,CAAC;MACZG,IAAI,EAAEZ,SADM;MAEZa,OAAO,EAAEG,KAAK,CAACF;IAFH,CAAD,CAAf;EAIH,CAND;AAOH,CARM;AAUP,OAAO,MAAMG,gBAAgB,GAAIC,KAAD,IAAW;EACvC,OAAO,MAAOT,QAAP,IAAoB;IACvB,OAAOU,KAAK,CAAE,wCAAuCD,KAAM,EAA/C,CAAL,CACNE,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,EAENF,IAFM,CAEDG,MAAM,IAAI;MAACd,QAAQ,CAAE;QAACG,IAAI,EAAEN,eAAP;QAAwBO,OAAO,EAAEU;MAAjC,CAAF,CAAR;IAAqD,CAF/D,CAAP;EAGH,CAJD;AAKH,CANM;AAQP,OAAO,MAAMC,UAAU,GAAIX,OAAD,IAAa;EACnC,OAAO,MAAOJ,QAAP,IAAoB;IACvB,MAAMY,GAAG,GAAG,MAAMvB,KAAK,CAAC2B,IAAN,CAAW,sCAAX,EAAmDZ,OAAnD,CAAlB;IACA,OAAO;MACHD,IAAI,EAAEV,aADH;MAEHmB;IAFG,CAAP;EAIH,CAND;AAQH,CATM;AAUP,OAAO,MAAMK,eAAe,GAAIC,EAAD,IAAQ;EACnC,OAAO,gBAAgBlB,QAAhB,EAA0B;IAC7B,MAAMmB,OAAO,GAAG,MAAM9B,KAAK,CAACa,GAAN,CAAU,mCAAmCgB,EAA7C,CAAtB;IACA,OAAOlB,QAAQ,CAAC;MACZG,IAAI,EAAEX,aADM;MAEZY,OAAO,EAAEe,OAAO,CAACd;IAFL,CAAD,CAAf;EAIH,CAND;AAQH,CATM;AAWP,OAAO,SAASe,YAAT,CAAuBhB,OAAvB,EAAgC;EACnC,OAAO;IACHD,IAAI,EAAET,cADH;IAEHU;EAFG,CAAP;AAIH;AAAA;AAED,OAAO,SAASiB,iBAAT,CAA2BjB,OAA3B,EAAoC;EACvC,OAAO;IACHD,IAAI,EAAER,gBADH;IAEHS;EAFG,CAAP;AAIH;AAED,OAAO,SAASkB,kBAAT,CAA4BlB,OAA5B,EAAqC;EACxC,OAAO;IACHD,IAAI,EAAEP,QADH;IAEHQ;EAFG,CAAP;AAIH"},"metadata":{},"sourceType":"module"}